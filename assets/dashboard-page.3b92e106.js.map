{"version":3,"file":"dashboard-page.3b92e106.js","sources":["../../src/page/Dashboard/DashboardApps/style.tsx","../../src/page/Dashboard/components/DashboardItemMenu/style.tsx","../../src/redux/dashboard/apps/dashboardAppSelector.ts","../../src/page/Dashboard/components/DashboardItemMenu/index.tsx","../../src/page/Dashboard/DashboardApps/index.tsx","../../src/page/Dashboard/components/DashboardItemMenu/resourcesItemMenu.tsx","../../src/page/Dashboard/DashboardResources/style.tsx","../../src/page/Dashboard/DashboardResources/index.tsx","../../src/page/Dashboard/style.tsx","../../src/page/Dashboard/components/DashboardTitleBar/style.tsx","../../src/page/Dashboard/components/DashboardTitleBar/index.tsx","../../src/page/Dashboard/index.tsx"],"sourcesContent":["import { SerializedStyles } from \"@emotion/serialize\"\nimport { css, keyframes } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const appsContainerStyle: SerializedStyles = css`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  margin: 0 auto;\n  width: 67%;\n  height: 100%;\n`\n\nexport const listTitleContainerStyle: SerializedStyles = css`\n  display: flex;\n  height: 80px;\n  align-items: center;\n  flex-direction: row;\n`\n\nexport const listTitleStyle: SerializedStyles = css`\n  font-size: 20px;\n  font-weight: 500;\n  flex-grow: 1;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const itemExtraContainerStyle: SerializedStyles = css`\n  display: flex;\n  height: 100%;\n  align-items: center;\n  flex-direction: row;\n`\n\nexport const menuButtonStyle: SerializedStyles = css`\n  margin-left: 4px;\n`\n\nexport const itemMenuButtonStyle: SerializedStyles = css`\n  margin-left: 4px;\n`\n\nexport const loadingBoxStyle = css`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  padding-top: 120px;\n`\n\nexport const hoverableStyle = css`\n  cursor: pointer;\n`\n\nexport const editButtonStyle = css`\n  opacity: 0;\n`\nexport const rateScale = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`\nexport const listItemStyle = css`\n  &: hover {\n    [title=\"editButton\"] {\n      animation: 0.15s ${rateScale} ease-in-out forwards;\n    }\n  }\n`\n","import { SerializedStyles } from \"@emotion/serialize\"\nimport { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const triggerContentContainerCss: SerializedStyles = css`\n  padding-top: 8px;\n  padding-bottom: 8px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport function applyTriggerContentItemStyle(\n  color: string,\n  hoverColor?: string,\n): SerializedStyles {\n  return css`\n    cursor: pointer;\n    padding: 5px 16px;\n    color: ${color};\n    min-width: 184px;\n    font-size: 14px;\n\n    &:hover {\n      background: ${globalColor(`--${illaPrefix}-techPurple-07`)};\n      color: ${hoverColor || color};\n    }\n  `\n}\n\nexport const modalStyle = css`\n  width: 520px;\n`\n\nexport const closeIconStyle = css`\n  position: absolute;\n  top: 21px;\n  right: 18px;\n`\n","import { RootState } from \"@/store\"\n\nexport const getDashboardApps = (state: RootState) => {\n  return state.dashboard.dashboardApps.list\n}\n","import { FC, useEffect, useState } from \"react\"\nimport { DashboardItemMenuProps } from \"@/page/Dashboard/components/DashboardItemMenu/interface\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\nimport { Modal } from \"@illa-design/modal\"\nimport { Input } from \"@illa-design/input\"\nimport { Message } from \"@illa-design/message\"\nimport { CloseIcon } from \"@illa-design/icon\"\nimport {\n  triggerContentContainerCss,\n  applyTriggerContentItemStyle,\n  modalStyle,\n  closeIconStyle,\n} from \"./style\"\nimport { useTranslation } from \"react-i18next\"\nimport { Api } from \"@/api/base\"\nimport { useDispatch } from \"react-redux\"\nimport { dashboardAppActions } from \"@/redux/dashboard/apps/dashboardAppSlice\"\nimport { DashboardApp } from \"@/redux/dashboard/apps/dashboardAppState\"\n\nexport const DashboardItemMenu: FC<DashboardItemMenuProps> = (props) => {\n  const { appId, appName, appIndex } = props\n\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  let confirmVal = \"\"\n\n  return (\n    <div css={triggerContentContainerCss}>\n      <div\n        css={applyTriggerContentItemStyle(\n          globalColor(`--${illaPrefix}-grayBlue-02`),\n          globalColor(`--${illaPrefix}-techPurple-01`),\n        )}\n        onClick={() => {\n          Modal.confirm({\n            _css: modalStyle,\n            content: (\n              <Input\n                onChange={(res) => {\n                  confirmVal = res\n                }}\n              />\n            ),\n            title: t(\"rename\"),\n            confirmLoading: confirmLoading,\n            okButtonProps: {\n              colorScheme: \"techPurple\",\n            },\n            closable: true,\n            // closeElement: <div css={closeIconStyle}>\n            //   <CloseIcon size=\"14px\" />\n            // </div>,\n            onOk: () => {\n              setConfirmLoading(true)\n\n              return new Promise((resolve) => {\n                if (!confirmVal) {\n                  Message.error(t(\"dashboard.app.name_empty\"))\n                  resolve(\"finish\")\n                  return\n                }\n                Api.request(\n                  {\n                    url: `/apps/${appId}`,\n                    method: \"PUT\",\n                    data: {\n                      appName: confirmVal,\n                    },\n                  },\n                  (response) => {\n                    dispatch(\n                      dashboardAppActions.renameDashboardAppReducer({\n                        appId: appId,\n                        newName: confirmVal,\n                      }),\n                    )\n\n                    setConfirmLoading(false)\n                    resolve(\"finish\")\n                  },\n                  (failure) => {\n                    Message.error(t(\"dashboard.app.rename_fail\"))\n\n                    setConfirmLoading(false)\n                    resolve(\"finish\")\n                  },\n                  (crash) => {\n                    Message.error(t(\"network_error\"))\n\n                    setConfirmLoading(false)\n                    resolve(\"finish\")\n                  },\n                )\n              })\n            },\n          })\n        }}\n      >\n        {t(\"rename\")}\n      </div>\n      <div\n        css={applyTriggerContentItemStyle(\n          globalColor(`--${illaPrefix}-grayBlue-02`),\n          globalColor(`--${illaPrefix}-techPurple-01`),\n        )}\n        onClick={() => {\n          Modal.confirm({\n            _css: modalStyle,\n            content: (\n              <Input\n                onChange={(res) => {\n                  confirmVal = res\n                }}\n                placeholder={`${t(\"dashboard.app.duplicate_placeholder\")}`}\n              />\n            ),\n            title: `${t(\"duplicate\")} '${appName}'`,\n            confirmLoading: confirmLoading,\n            okButtonProps: {\n              colorScheme: \"techPurple\",\n            },\n            closable: true,\n            // closeElement: <div css={closeIconStyle}>\n            //   <CloseIcon size=\"14px\" />\n            // </div>,\n            onOk: () => {\n              setConfirmLoading(true)\n              return new Promise((resolve) => {\n                Api.request<DashboardApp>(\n                  {\n                    url: `/apps/${appId}/duplicate`,\n                    method: \"POST\",\n                  },\n                  (response) => {\n                    dispatch(\n                      dashboardAppActions.addDashboardAppReducer({\n                        index: appIndex,\n                        app: response.data,\n                      }),\n                    )\n\n                    setConfirmLoading(false)\n                    resolve(\"finish\")\n                  },\n                  (failure) => {\n                    Message.error(t(\"dashboard.app.duplicate_fail\"))\n\n                    setConfirmLoading(false)\n                    resolve(\"finish\")\n                  },\n                  (crash) => {\n                    Message.error(t(\"network_error\"))\n\n                    setConfirmLoading(false)\n                    resolve(\"finish\")\n                  },\n                )\n              })\n            },\n          })\n        }}\n      >\n        {t(\"duplicate\")}\n      </div>\n      <div\n        css={applyTriggerContentItemStyle(\n          globalColor(`--${illaPrefix}-red-03`),\n        )}\n        onClick={() => {\n          Modal.confirm({\n            _css: modalStyle,\n            title: t(\"dashboard.common.delete_title\"),\n            content: <span>{t(\"dashboard.common.delete_content\")}</span>,\n            cancelText: t(\"dashboard.common.delete_cancel_text\"),\n            okText: t(\"dashboard.common.delete_ok_text\"),\n            okButtonProps: {\n              colorScheme: \"techPurple\",\n            },\n            closable: true,\n            // closeElement: <div css={closeIconStyle}>\n            //   <CloseIcon size=\"14px\" />\n            // </div>,\n            onOk: () => {\n              Api.request<DashboardApp>(\n                {\n                  url: `/apps/${appId}`,\n                  method: \"DELETE\",\n                },\n                (response) => {\n                  dispatch(\n                    dashboardAppActions.removeDashboardAppReducer(\n                      response.data.appId,\n                    ),\n                  )\n\n                  Message.success(t(\"dashboard.app.trash_success\"))\n                },\n                (failure) => {\n                  Message.success(t(\"dashboard.app.trash_failure\"))\n                },\n                (crash) => {\n                  Message.error(t(\"network_error\"))\n                },\n              )\n            },\n          })\n        }}\n      >\n        {t(\"dashboard.common.delete\")}\n      </div>\n    </div>\n  )\n}\n\nDashboardItemMenu.displayName = \"DashboardItemMenu\"\n","import { FC, useState } from \"react\"\nimport {\n  appsContainerStyle,\n  itemExtraContainerStyle,\n  itemMenuButtonStyle,\n  listTitleContainerStyle,\n  listTitleStyle,\n  menuButtonStyle,\n  hoverableStyle,\n  listItemStyle,\n  editButtonStyle,\n} from \"./style\"\nimport { modalStyle } from \"@/page/Dashboard/components/DashboardItemMenu/style\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button } from \"@illa-design/button\"\nimport { List, ListItemMeta, ListItem } from \"@illa-design/list\"\nimport { MoreIcon } from \"@illa-design/icon\"\nimport { Divider } from \"@illa-design/divider\"\nimport { DashboardApp } from \"@/redux/dashboard/apps/dashboardAppState\"\nimport { Empty } from \"@illa-design/empty\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getDashboardApps } from \"@/redux/dashboard/apps/dashboardAppSelector\"\nimport { dashboardAppActions } from \"@/redux/dashboard/apps/dashboardAppSlice\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Api } from \"@/api/base\"\nimport { Tooltip } from \"@illa-design/tooltip\"\nimport { DashboardItemMenu } from \"@/page/Dashboard/components/DashboardItemMenu\"\nimport { Message } from \"@illa-design/message\"\nimport { Modal } from \"@illa-design/modal\"\nimport { Input } from \"@illa-design/input\"\n\nexport const DashboardApps: FC = () => {\n  const { t } = useTranslation()\n\n  const dispatch = useDispatch()\n  let navigate = useNavigate()\n\n  const appsList: DashboardApp[] = useSelector(getDashboardApps)\n\n  const [createLoading, setCreateNewLoading] = useState(false)\n\n  let confirmVal = \"\"\n\n  return (\n    <div css={appsContainerStyle}>\n      <div css={listTitleContainerStyle}>\n        <span css={listTitleStyle}>{t(\"all_apps\")}</span>\n        <Button\n          colorScheme=\"gray\"\n          onClick={() => {\n            Message.success({ content: t(\"link_copied\") })\n          }}\n        >\n          {t(\"share\")}\n        </Button>\n        <Button\n          _css={menuButtonStyle}\n          loading={createLoading}\n          colorScheme=\"techPurple\"\n          onClick={() => {\n            Modal.confirm({\n              _css: modalStyle,\n              content: (\n                <Input\n                  onChange={(res) => {\n                    confirmVal = res\n                  }}\n                />\n              ),\n              title: t(\"dashboard.app.create_app\"),\n              okButtonProps: {\n                colorScheme: \"techPurple\",\n              },\n              closable: true,\n              onOk: () => {\n                Api.request<DashboardApp>(\n                  {\n                    url: \"/apps\",\n                    method: \"POST\",\n                    data: {\n                      appName: confirmVal,\n                    },\n                  },\n                  (response) => {\n                    dispatch(\n                      dashboardAppActions.addDashboardAppReducer({\n                        app: response.data,\n                      }),\n                    )\n                    navigate(`/app/${response.data.appId}`)\n                  },\n                  (response) => {},\n                  (error) => {},\n                  (loading) => {\n                    setCreateNewLoading(loading)\n                  },\n                  (errorState) => {\n                    if (errorState) {\n                      Message.error({ content: t(\"create_fail\") })\n                    }\n                  },\n                )\n              },\n            })\n          }}\n        >\n          {t(\"create_new_app\")}\n        </Button>\n      </div>\n      <Divider direction=\"horizontal\" />\n      {appsList.length !== 0 && (\n        <List\n          size=\"medium\"\n          data={appsList}\n          bordered={false}\n          hoverable={true}\n          render={(item, index) => {\n            return (\n              <ListItem\n                _css={listItemStyle}\n                extra={\n                  <div css={itemExtraContainerStyle}>\n                    <Button\n                      colorScheme=\"techPurple\"\n                      onClick={() => {\n                        navigate(`/app/${item.appId}`)\n                      }}\n                      _css={editButtonStyle}\n                      title=\"editButton\"\n                    >\n                      {t(\"edit\")}\n                    </Button>\n                    <Tooltip\n                      trigger=\"click\"\n                      colorScheme=\"white\"\n                      showArrow={false}\n                      position=\"br\"\n                      withoutPadding\n                      clickOutsideToClose\n                      closeOnInnerClick\n                      content={\n                        <DashboardItemMenu\n                          appId={item.appId}\n                          appName={item.appName}\n                          appIndex={index}\n                        />\n                      }\n                    >\n                      <Button\n                        _css={itemMenuButtonStyle}\n                        colorScheme=\"grayBlue\"\n                        leftIcon={<MoreIcon size=\"14px\" />}\n                      />\n                    </Tooltip>\n                  </div>\n                }\n              >\n                <ListItemMeta\n                  css={hoverableStyle}\n                  title={item.appName}\n                  description={`${item.lastModifiedBy} ${item.lastModifiedAt}`}\n                  onClick={() => {\n                    navigate(`/app/${item.appId}`)\n                  }}\n                />\n              </ListItem>\n            )\n          }}\n          renderKey={(item) => {\n            return item.appId\n          }}\n        />\n      )}\n      {appsList.length == 0 && <Empty paddingVertical=\"120px\" />}\n    </div>\n  )\n}\n\nDashboardApps.displayName = \"DashboardApps\"\n","import { FC, useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\nimport { Modal } from \"@illa-design/modal\"\nimport { Message } from \"@illa-design/message\"\nimport { CloseIcon } from \"@illa-design/icon\"\nimport {\n  triggerContentContainerCss,\n  applyTriggerContentItemStyle,\n  modalStyle,\n  closeIconStyle,\n} from \"./style\"\nimport { useTranslation } from \"react-i18next\"\nimport { Api } from \"@/api/base\"\nimport { resourceActions } from \"@/redux/resource/resourceSlice\"\nimport { DashboardResource } from \"@/redux/resource/resourceState\"\nimport { DashboardResourcesItemMenuProps } from \"./interface\"\n\nexport const DashboardResourcesItemMenu: FC<DashboardResourcesItemMenuProps> = (\n  props,\n) => {\n  const { resourceId, showFormVisible, setCurId } = props\n\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  return (\n    <>\n      <div css={triggerContentContainerCss}>\n        <div\n          css={applyTriggerContentItemStyle(\n            globalColor(`--${illaPrefix}-grayBlue-02`),\n            globalColor(`--${illaPrefix}-techPurple-01`),\n          )}\n          onClick={() => {\n            setCurId(resourceId)\n            showFormVisible()\n          }}\n        >\n          {t(\"edit\")}\n        </div>\n        <div\n          css={applyTriggerContentItemStyle(\n            globalColor(`--${illaPrefix}-red-03`),\n          )}\n          onClick={() => {\n            Modal.confirm({\n              _css: modalStyle,\n              confirmLoading: confirmLoading,\n              title: t(\"dashboard.common.delete_title\"),\n              content: <span>{t(\"dashboard.common.delete_content\")}</span>,\n              cancelText: t(\"dashboard.common.delete_cancel_text\"),\n              okText: t(\"dashboard.common.delete_ok_text\"),\n              okButtonProps: {\n                colorScheme: \"techPurple\",\n              },\n              closable: true,\n              // closeElement: <div css={closeIconStyle}>\n              //   <CloseIcon size=\"14px\" />\n              // </div>,\n              onOk: () => {\n                setConfirmLoading(true)\n                return new Promise((resolve) => {\n                  Api.request<DashboardResource>(\n                    {\n                      url: `/resources/${resourceId}`,\n                      method: \"DELETE\",\n                    },\n                    (response) => {\n                      dispatch(\n                        resourceActions.removeResourceItemReducer(\n                          response.data.resourceId,\n                        ),\n                      )\n                      Message.success(t(\"dashboard.resources.trash_success\"))\n\n                      setConfirmLoading(false)\n                      resolve(\"finish\")\n                    },\n                    (failure) => {\n                      Message.error(t(\"dashboard.resources.trash_failure\"))\n\n                      setConfirmLoading(false)\n                      resolve(\"finish\")\n                    },\n                    (crash) => {\n                      Message.error(t(\"network_error\"))\n\n                      setConfirmLoading(false)\n                      resolve(\"finish\")\n                    },\n                  )\n                })\n              },\n            })\n          }}\n        >\n          {t(\"dashboard.common.delete\")}\n        </div>\n      </div>\n    </>\n  )\n}\n\nDashboardResourcesItemMenu.displayName = \"DashboardResourcesItemMenu\"\n","import { SerializedStyles } from \"@emotion/serialize\"\nimport { css, keyframes } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const resourceContainerStyle: SerializedStyles = css`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  margin: 0 auto;\n  width: 67%;\n  height: 100%;\n`\n\nexport const nameIconStyle = css`\n  font-size: 24px;\n  margin-right: 8px;\n`\nexport const tableMainTextStyle = css`\n  font-weight: 500;\n`\nexport const tableNormalTextStyle = css`\n  font-size: 14px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\nexport const tableInfoTextStyle = css`\n  font-size: 14px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n\nconst rateScale = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`\nexport const tableStyle = css`\n  thead tr th {\n    background: ${globalColor(`--${illaPrefix}-white-01`)};\n  }\n  tr {\n    height: 56px;\n  }\n  tbody tr {\n    cursor: pointer;\n    &: hover {\n      background: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n      [title=\"editButton\"] {\n        animation: 0.15s ${rateScale} ease-in-out forwards;\n      }\n    }\n  }\n  tbody tr td {\n    background: inherit;\n  }\n`\n","import { FC, ReactNode, useMemo, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { css } from \"@emotion/react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button } from \"@illa-design/button\"\nimport { Tooltip } from \"@illa-design/tooltip\"\nimport { Empty } from \"@illa-design/empty\"\nimport { Table } from \"@illa-design/table\"\nimport { RestApiIcon, MoreIcon } from \"@illa-design/icon\"\nimport { DashboardResource } from \"@/redux/resource/resourceState\"\nimport { selectAllResource } from \"@/redux/resource/resourceSelector\"\nimport {\n  appsContainerStyle,\n  listTitleContainerStyle,\n  listTitleStyle,\n  itemMenuButtonStyle,\n  editButtonStyle,\n} from \"@/page/Dashboard/DashboardApps/style\"\nimport { DashboardResourcesItemMenu } from \"@/page/Dashboard/components/DashboardItemMenu/resourcesItemMenu\"\nimport { ActionGenerator } from \"@/page/App/components/ActionEditor/ActionGenerator\"\nimport { ResourceForm } from \"@/page/App/components/ActionEditor/ResourceForm\"\nimport {\n  nameIconStyle,\n  tableNormalTextStyle,\n  tableMainTextStyle,\n  tableInfoTextStyle,\n  tableStyle,\n} from \"./style\"\n\nfunction NameColComponent(type: string, text: string) {\n  let icon: ReactNode = null\n  if (type) {\n    icon = <RestApiIcon css={nameIconStyle} />\n  }\n  return (\n    <>\n      {icon}\n      <span css={css(tableNormalTextStyle, tableMainTextStyle)}>{text}</span>\n    </>\n  )\n}\nfunction TypeColComponent(text: string) {\n  return <span css={tableInfoTextStyle}>{text}</span>\n}\nfunction DbNameColComponent(text: string) {\n  if (text) {\n    return <span css={tableNormalTextStyle}>{text}</span>\n  } else {\n    return <span css={tableInfoTextStyle}>Null</span>\n  }\n}\nfunction CtimeColComponent(text: string) {\n  return <span css={tableInfoTextStyle}>{text}</span>\n}\nconst ExtraColComponent: FC<{\n  resourceId: string\n  showFormVisible: () => void\n  setCurId: (curResourceId: string) => void\n}> = (props) => {\n  const { t } = useTranslation()\n  const { resourceId, showFormVisible, setCurId } = props\n  return (\n    <>\n      <Button\n        className=\"edit-button\"\n        _css={editButtonStyle}\n        colorScheme=\"techPurple\"\n        onClick={() => {\n          setCurId(resourceId)\n          showFormVisible()\n        }}\n        title=\"editButton\"\n      >\n        {t(\"edit\")}\n      </Button>\n      <Tooltip\n        trigger=\"click\"\n        colorScheme=\"white\"\n        showArrow={false}\n        position=\"br\"\n        withoutPadding\n        clickOutsideToClose\n        closeOnInnerClick\n        content={\n          <DashboardResourcesItemMenu\n            resourceId={resourceId}\n            setCurId={setCurId}\n            showFormVisible={showFormVisible}\n          />\n        }\n      >\n        <Button\n          _css={itemMenuButtonStyle}\n          colorScheme=\"grayBlue\"\n          leftIcon={<MoreIcon size=\"14px\" />}\n        />\n      </Tooltip>\n    </>\n  )\n}\n\nexport const DashboardResources: FC = () => {\n  const [actionGeneratorVisible, setActionGeneratorVisible] = useState(false)\n  const [formVisible, setFormVisible] = useState<boolean>(false)\n  const [curResourceId, setCurResourceId] = useState<string>(\"\")\n\n  const { t } = useTranslation()\n\n  const resourcesList: DashboardResource[] = useSelector(selectAllResource)\n\n  const showFromFunction = () => {\n    setFormVisible(true)\n  }\n  const changeCurResourceId = (curResourceId: string) => {\n    setCurResourceId(curResourceId)\n  }\n\n  const countColumnsWidth = (itemWidth: number, minWidth: number) => {\n    const windowSizaRate = +(\n      (document.documentElement.clientWidth * 0.67) /\n      1920\n    ).toFixed(2)\n    return itemWidth * windowSizaRate < minWidth\n      ? minWidth\n      : itemWidth * windowSizaRate\n  }\n  const columns = useMemo(\n    () => [\n      {\n        Header: t(\"dashboard.resources.table_name\"),\n        accessor: \"nameCol\",\n        width: `${countColumnsWidth(360, 160)}px`,\n      },\n      {\n        Header: t(\"dashboard.resources.table_type\"),\n        accessor: \"typeCol\",\n        width: \"150px\",\n      },\n      {\n        Header: t(\"dashboard.resources.table_dbname\"),\n        accessor: \"dbNameCol\",\n        width: `${countColumnsWidth(520, 200)}px`,\n      },\n      {\n        Header: t(\"dashboard.resources.table_ctime\"),\n        accessor: \"ctimeCol\",\n        width: \"150px\",\n      },\n      {\n        Header: \"\",\n        accessor: \"extraCol\",\n        disableSortBy: true,\n        width: \"90px\",\n      },\n    ],\n    [],\n  )\n  const data = useMemo(() => {\n    const result: any[] = []\n    resourcesList.forEach((item: DashboardResource, idx: number) => {\n      result.push({\n        nameCol: NameColComponent(item.resourceType, item.resourceName),\n        typeCol: TypeColComponent(item.resourceType),\n        dbNameCol: DbNameColComponent(item.databaseName),\n        ctimeCol: CtimeColComponent(item.createdAt),\n        extraCol: (\n          <ExtraColComponent\n            resourceId={item.resourceId}\n            showFormVisible={() => showFromFunction()}\n            setCurId={changeCurResourceId}\n          />\n        ),\n      })\n    })\n    return result\n  }, [resourcesList])\n\n  return (\n    <>\n      <div css={appsContainerStyle}>\n        <div css={listTitleContainerStyle}>\n          <span css={listTitleStyle}>{t(\"resources\")}</span>\n          <Button\n            colorScheme=\"techPurple\"\n            onClick={() => {\n              setActionGeneratorVisible(true)\n            }}\n          >\n            {t(\"create_new\")}\n          </Button>\n        </div>\n        {resourcesList?.length ? (\n          <Table\n            _css={tableStyle}\n            data={data}\n            columns={columns}\n            disableRowSelect\n            striped\n          />\n        ) : null}\n        {!resourcesList?.length ? <Empty paddingVertical=\"120px\" /> : null}\n      </div>\n      <ActionGenerator\n        visible={actionGeneratorVisible}\n        onClose={() => {\n          setActionGeneratorVisible(false)\n        }}\n        onAddAction={() => {\n          setActionGeneratorVisible(false)\n        }}\n      />\n      <ResourceForm\n        visible={formVisible}\n        actionType=\"edit\"\n        resourceId={curResourceId}\n        onCancel={() => {\n          setFormVisible(false)\n        }}\n      />\n    </>\n  )\n}\n\nDashboardResources.displayName = \"DashboardResources\"\n","import { css, SerializedStyles } from \"@emotion/react\"\n\nexport const containerStyle: SerializedStyles = css`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n`\n","import { css, SerializedStyles } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const containerStyle: SerializedStyles = css`\n  box-sizing: border-box;\n  width: 100%;\n`\n\nexport const navBarLogoContainerStyle: SerializedStyles = css`\n  padding-left: 16px;\n  padding-right: 24px;\n  display: inline-flex;\n  align-items: center;\n  align-self: center;\n  flex-direction: row;\n  width: 74px;\n`\n\nexport const navBarAvatarContainerStyle: SerializedStyles = css`\n  padding-left: 16px;\n  padding-right: 16px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: end;\n  flex-grow: 1;\n  align-self: center;\n  flex-direction: row;\n  cursor: pointer;\n`\n\nexport const expandStyle: SerializedStyles = css`\n  margin-left: 8px;\n`\n\nexport const settingBodyStyle = css`\n  width: 200px;\n  height: 120px;\n  border-radius: 8px;\n  box-shadow: 0 2px 16px 0 ${globalColor(`--${illaPrefix}-blackAlpha-05`)};\n  border: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n`\n\nexport const coverTriggerStyle = css`\n  position: relative;\n  top: 10px;\n  & > div {\n    padding: 0;\n    box-shadow: none;\n  }\n`\n\nexport const settingUserStyle = css`\n  padding: 0 8px;\n`\n\nexport const userAvatarStyle = css`\n  margin: 8px;\n`\n\nexport const usernameStyle = css`\n  font-size: 12px;\n  font-weight: 500;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const settingListStyle = css`\n  padding: 4px 0;\n`\n\nexport const settingItemStyle = css`\n  padding: 5px 16px;\n  font-size: 14px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  cursor: pointer;\n`\n","import { FC } from \"react\"\nimport {\n  containerStyle,\n  expandStyle,\n  navBarAvatarContainerStyle,\n  navBarLogoContainerStyle,\n  settingBodyStyle,\n  coverTriggerStyle,\n  settingUserStyle,\n  userAvatarStyle,\n  usernameStyle,\n  settingItemStyle,\n  settingListStyle,\n} from \"./style\"\nimport { TabPane, Tabs } from \"@illa-design/tabs\"\nimport { useTranslation } from \"react-i18next\"\nimport { ReactComponent as Logo } from \"@assets/illa-logo.svg\"\nimport { useLocation, useNavigate } from \"react-router-dom\"\nimport { Avatar } from \"@illa-design/avatar\"\nimport { DownIcon } from \"@illa-design/icon\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\nimport { Trigger } from \"@illa-design/trigger\"\nimport { Divider } from \"@illa-design/divider\"\n\nconst SettingTrigger: FC = () => {\n  const { t } = useTranslation()\n  let navigate = useNavigate()\n  return (\n    <div css={settingBodyStyle}>\n      <div css={settingUserStyle}>\n        <Avatar size=\"small\" css={userAvatarStyle} />\n        <span css={usernameStyle}>OnlyBoA</span>\n      </div>\n      <Divider />\n      <div css={settingListStyle}>\n        <div\n          css={settingItemStyle}\n          onClick={() => {\n            navigate(\"/setting\")\n          }}\n        >\n          {t(\"Setting\")}\n        </div>\n        <div\n          css={settingItemStyle}\n          onClick={() => {\n            navigate(\"/user/login\")\n          }}\n        >\n          {t(\"Logout\")}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const DashboardTitleBar: FC = () => {\n  const { t } = useTranslation()\n  let navigate = useNavigate()\n  let location = useLocation()\n  let pathList = location.pathname.split(\"/\")\n  const tabs: {\n    key: string\n    title: string\n  }[] = [\n    {\n      key: \"apps\",\n      title: t(\"apps\"),\n    },\n    {\n      key: \"resources\",\n      title: t(\"resources\"),\n    },\n  ]\n  return (\n    <Tabs\n      prefix={\n        <div css={navBarLogoContainerStyle} key=\"prefix\">\n          <Logo\n            onClick={() => {\n              navigate(\"/\")\n            }}\n          />\n        </div>\n      }\n      suffix={\n        <div css={navBarAvatarContainerStyle} key=\"suffix\">\n          <Trigger\n            trigger=\"hover\"\n            position=\"br\"\n            showArrow={false}\n            colorScheme=\"white\"\n            clickOutsideToClose\n            content={<SettingTrigger />}\n            _css={coverTriggerStyle}\n          >\n            <div>\n              <Avatar colorScheme=\"techPurple\" size=\"small\" />\n              <DownIcon\n                _css={expandStyle}\n                size=\"12px\"\n                color={globalColor(`--${illaPrefix}-grayBlue-05`)}\n              />\n            </div>\n          </Trigger>\n        </div>\n      }\n      activeKey={pathList[pathList.length - 1]}\n      css={containerStyle}\n      withoutContent\n      colorScheme=\"grayBlue\"\n      size=\"large\"\n      onChange={(key) => {\n        switch (key) {\n          case \"apps\":\n            navigate(\"./apps\")\n            break\n          case \"resources\":\n            navigate(\"./resources\")\n            break\n        }\n      }}\n    >\n      {tabs.map((item) => {\n        return <TabPane title={item.title} key={item.key} />\n      })}\n    </Tabs>\n  )\n}\n\nDashboardTitleBar.displayName = \"DashboardTitleBar\"\n","import { FC, useEffect, useState } from \"react\"\nimport { Outlet } from \"react-router-dom\"\nimport { containerStyle } from \"./style\"\nimport { DashboardTitleBar } from \"@/page/Dashboard/components/DashboardTitleBar\"\nimport { Connection, Room } from \"@/api/ws/ws\"\nimport { Api } from \"@/api/base\"\nimport { DashboardApp } from \"@/redux/dashboard/apps/dashboardAppState\"\nimport { dashboardAppActions } from \"@/redux/dashboard/apps/dashboardAppSlice\"\nimport { useDispatch } from \"react-redux\"\nimport { Resource } from \"@/redux/resource/resourceState\"\nimport { resourceActions } from \"@/redux/resource/resourceSlice\"\n\nexport const IllaApp: FC = () => {\n  const [room, setRoom] = useState<Room>()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    const controller = new AbortController()\n    Api.request<DashboardApp[]>(\n      {\n        url: \"/apps\",\n        method: \"GET\",\n        signal: controller.signal,\n      },\n      (response) => {\n        dispatch(\n          dashboardAppActions.updateDashboardAppListReducer(response.data),\n        )\n      },\n      (response) => {},\n      (error) => {},\n    )\n\n    Api.request<Resource[]>(\n      {\n        url: \"/resources\",\n        method: \"GET\",\n        signal: controller.signal,\n      },\n      (response) => {\n        dispatch(resourceActions.addResourceListReducer(response.data))\n      },\n      () => {\n        // TODO: handle error\n      },\n      () => {},\n      () => {\n        // TODO: handle loading\n      },\n    )\n\n    Connection.enterRoom(\n      \"dashboard\",\n      (loading) => {},\n      (errorState) => {},\n      (room) => {\n        setRoom(room)\n      },\n    )\n    return () => {\n      if (room !== undefined) {\n        Connection.leaveRoom(room.roomId)\n      }\n      controller.abort()\n    }\n  }, [])\n  return (\n    <div css={containerStyle}>\n      <DashboardTitleBar />\n      <Outlet />\n    </div>\n  )\n}\n\nIllaApp.displayName = \"IllaApp\"\n"],"names":["appsContainerStyle","_EMOTION_STRINGIFIED_CSS_ERROR__","listTitleContainerStyle","listTitleStyle","globalColor","illaPrefix","itemExtraContainerStyle","menuButtonStyle","itemMenuButtonStyle","hoverableStyle","editButtonStyle","rateScale","keyframes","listItemStyle","triggerContentContainerCss","color","hoverColor","css","modalStyle","getDashboardApps","state","dashboard","dashboardApps","list","DashboardItemMenu","props","appId","appName","appIndex","t","useTranslation","dispatch","useDispatch","confirmLoading","setConfirmLoading","useState","confirmVal","_jsxDEV","applyTriggerContentItemStyle","Modal","confirm","_css","content","res","_jsxFileName","this","title","okButtonProps","colorScheme","closable","onOk","Promise","resolve","error","Api","request","url","method","data","response","dashboardAppActions","renameDashboardAppReducer","newName","failure","crash","addDashboardAppReducer","index","app","cancelText","okText","removeDashboardAppReducer","success","displayName","DashboardApps","navigate","useNavigate","appsList","useSelector","createLoading","setCreateNewLoading","Message","loading","errorState","length","item","lastModifiedBy","lastModifiedAt","DashboardResourcesItemMenu","resourceId","showFormVisible","setCurId","_Fragment","resourceActions","removeResourceItemReducer","nameIconStyle","tableMainTextStyle","tableNormalTextStyle","tableInfoTextStyle","tableStyle","type","text","icon","ExtraColComponent","DashboardResources","actionGeneratorVisible","setActionGeneratorVisible","formVisible","setFormVisible","curResourceId","setCurResourceId","resourcesList","selectAllResource","showFromFunction","changeCurResourceId","countColumnsWidth","itemWidth","minWidth","windowSizaRate","documentElement","clientWidth","toFixed","columns","useMemo","Header","accessor","width","disableSortBy","result","forEach","idx","push","nameCol","NameColComponent","resourceType","resourceName","typeCol","TypeColComponent","dbNameCol","DbNameColComponent","databaseName","ctimeCol","CtimeColComponent","createdAt","extraCol","containerStyle","navBarLogoContainerStyle","navBarAvatarContainerStyle","expandStyle","settingBodyStyle","coverTriggerStyle","settingUserStyle","userAvatarStyle","usernameStyle","settingListStyle","settingItemStyle","SettingTrigger","DashboardTitleBar","pathList","location","useLocation","pathname","split","tabs","key","Logo","map","IllaApp","room","setRoom","useEffect","controller","AbortController","signal","updateDashboardAppListReducer","addResourceListReducer","enterRoom","undefined","leaveRoom","roomId","abort"],"mappings":"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"}