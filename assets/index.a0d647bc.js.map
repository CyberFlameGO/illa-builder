{"version":3,"mappings":"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","names":["globalStyle","codemirrorGlobalStyle","css","globalColor","illaPrefix","Page404","this","Page403","Page500","getCurrentUser","state","currentUser","resources","en","translation","enUS","zh","zhCN","i18n","use","initReactI18next","init","lng","fallbackLng","debug","interpolation","escapeValue","then","getBuilderInfo","builderInfo","language","useSelector","changeLanguage","getLocaleFromLanguage","_jsxDEV","updateCurrentUserReducer","action","payload","currentUserSlice","createSlice","name","initialState","reducers","reducer","LiveFamilyInitialState","others","updateLiveFamilyListReducer","addPresenceReducer","index","undefined","splice","presence","push","removePresenceReducer","findIndex","element","userId","updatePresenceReducer","liveFamilySlice","updateAppInfoReducer","appInfoSlice","BuilderInfoInitialState","version","updateLanguageReducer","builderInfoSlice","editorReducer","combineReducers","inspect","inspectReducer","actionReducer","actionList","actionListReducer","resource","resourceReducer","appReducer","editor","appInfo","appInfoReducer","dashboardReducer","dashboardResources","dashboardResourceReducer","dashboardApps","dashboardAppReducer","store","configureStore","currentApp","dashboard","currentUserReducer","liveFamily","liveFamilyReducer","builderInfoReducer","middleware","getDefaultMiddleware","concat","logger","worker","start","startMockWorker","prepare","render","document","getElementById"],"sources":["../../vite/modulepreload-polyfill","../../vite/preload-helper","../../src/style.tsx","../../src/page/status/404/index.tsx","../../src/page/status/403/index.tsx","../../src/page/status/500/index.tsx","../../src/redux/currentUser/currentUserSelector.ts","../../src/i18n/config.ts","../../src/redux/builderInfo/builderInfoSelector.ts","../../src/App.tsx","../../src/redux/currentUser/currentUserReducer.ts","../../src/redux/currentUser/currentUserSlice.ts","../../src/redux/liveFamily/liveFamilyState.ts","../../src/redux/liveFamily/liveFamilyReducer.ts","../../src/redux/liveFamily/liveFamilySlice.ts","../../src/redux/currentApp/appInfo/appInfoReducer.ts","../../src/redux/currentApp/appInfo/appInfoSlice.ts","../../src/redux/builderInfo/builderInfoState.ts","../../src/redux/builderInfo/builderInfoReducer.ts","../../src/redux/builderInfo/builderInfoSlice.ts","../../src/store.ts","../../src/main.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const scriptRel = 'modulepreload';const seen = {};const base = '/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const globalStyle = css`\n  body {\n    margin: 0;\n    padding: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  * {\n    outline: none !important;\n  }\n\n  /*\n  *  Use a more-intuitive box-sizing model.\n  */\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n`\n\nexport const codemirrorGlobalStyle = css`\n  .CodeMirror-hints {\n    padding: 0;\n    border: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n    border-radius: 8px;\n    box-shadow: 0 2px 16px 0 ${globalColor(`--${illaPrefix}-blackAlpha-05`)};\n  }\n  li.CodeMirror-hint-active {\n    background: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n  }\n`\n","import { FC } from \"react\"\n\nexport const Page404: FC = () => {\n  return <div>404</div>\n}\n","import { FC } from \"react\"\n\nexport const Page403: FC = () => {\n  return <div>403</div>\n}\n","import { FC } from \"react\"\n\nexport const Page500: FC = () => {\n  return <div>500</div>\n}\n","import { RootState } from \"@/store\"\n\nexport const getCurrentUser = (state: RootState) => {\n  return state.currentUser\n}\n","import i18n from \"i18next\"\nimport zhCN from \"./locale/zh-CN.json\"\nimport enUS from \"./locale/en-US.json\"\nimport { initReactI18next } from \"react-i18next\"\n\nexport const resources = {\n  en: {\n    translation: {\n      ...enUS,\n    },\n  },\n  zh: {\n    translation: {\n      ...zhCN,\n    },\n  },\n} as const\n\ni18n\n  .use(initReactI18next)\n  .init({\n    lng: \"en\",\n    fallbackLng: \"en\",\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources,\n  })\n  .then()\n\nexport default i18n\n","import { RootState } from \"@/store\"\n\nexport const getBuilderInfo = (state: RootState) => {\n  return state.builderInfo\n}\n","import { Global, css } from \"@emotion/react\"\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\"\nimport { globalStyle, codemirrorGlobalStyle } from \"./style\"\nimport { DashboardApps } from \"@/page/Dashboard/DashboardApps\"\nimport { DashboardResources } from \"@/page/Dashboard/DashboardResources\"\nimport { IllaApp } from \"@/page/Dashboard\"\nimport { Editor } from \"@/page/App\"\nimport { Page404 } from \"@/page/status/404\"\nimport { Page403 } from \"@/page/status/403\"\nimport { Page500 } from \"@/page/status/500\"\nimport {\n  ConfigProvider,\n  enUS,\n  Locale,\n  zhCN,\n} from \"@illa-design/config-provider\"\nimport { useSelector } from \"react-redux\"\nimport { getCurrentUser } from \"@/redux/currentUser/currentUserSelector\"\nimport \"@/i18n/config\"\nimport \"@/api/base\"\nimport i18n from \"@/i18n/config\"\nimport { getBuilderInfo } from \"@/redux/builderInfo/builderInfoSelector\"\n\n// user language > builder language\nfunction getLocaleFromLanguage(language?: string): Locale {\n  let selectedLocale: Locale\n  switch (language ?? useSelector(getBuilderInfo).language) {\n    case \"English\":\n      selectedLocale = enUS\n      i18n.changeLanguage(\"en-US\").then()\n      break\n    case \"简体中文\":\n      selectedLocale = zhCN\n      i18n.changeLanguage(\"zh-CN\").then()\n      break\n    default:\n      selectedLocale = enUS\n  }\n  return enUS\n}\n\nfunction App() {\n  const currentUser = useSelector(getCurrentUser)\n  return (\n    <BrowserRouter>\n      <ConfigProvider locale={getLocaleFromLanguage(currentUser?.language)}>\n        <Global styles={css(globalStyle, codemirrorGlobalStyle)} />\n        <Routes>\n          <Route path=\"dashboard\" element={<IllaApp />}>\n            <Route index element={<Navigate to=\"./apps\" />} />\n            <Route path=\"apps\" element={<DashboardApps />} />\n            <Route path=\"resources\" element={<DashboardResources />} />\n          </Route>\n          <Route index element={<Navigate to=\"/dashboard\" />} />\n          <Route path=\"app/:app\" element={<Editor />} />\n          <Route path=\"403\" element={<Page403 />} />\n          <Route path=\"500\" element={<Page500 />} />\n          <Route path=\"*\" element={<Page404 />} />\n        </Routes>\n      </ConfigProvider>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { CaseReducer, PayloadAction } from \"@reduxjs/toolkit\"\nimport { CurrentUser } from \"@/redux/currentUser/currentUserState\"\n\nexport const updateCurrentUserReducer: CaseReducer<\n  CurrentUser | null,\n  PayloadAction<CurrentUser | null>\n> = (state, action) => {\n  state = action.payload\n  return state\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { updateCurrentUserReducer } from \"@/redux/currentUser/currentUserReducer\"\nimport { CurrentUser } from \"@/redux/currentUser/currentUserState\"\nimport { SliceCaseReducers } from \"@reduxjs/toolkit/src/createSlice\"\n\nconst currentUserSlice = createSlice<\n  CurrentUser | null,\n  SliceCaseReducers<CurrentUser | null>,\n  \"currentUser\"\n>({\n  name: \"currentUser\",\n  initialState: null,\n  reducers: {\n    updateCurrentUserReducer,\n  },\n})\n\nexport const currentUserActions = currentUserSlice.actions\nexport default currentUserSlice.reducer\n","export interface Presence {\n  userId: string\n  cursor: {\n    x: number\n    y: number\n  }\n}\n\nexport interface LiveFamilyState {\n  others: Presence[]\n}\n\nexport const LiveFamilyInitialState: LiveFamilyState = {\n  others: [],\n}\n","import { CaseReducer, PayloadAction } from \"@reduxjs/toolkit\"\nimport { LiveFamilyState, Presence } from \"@/redux/liveFamily/liveFamilyState\"\nimport { AddPresencePayload } from \"@/redux/liveFamily/liveFamilyPayload\"\n\nexport const updateLiveFamilyListReducer: CaseReducer<\n  LiveFamilyState,\n  PayloadAction<Presence[]>\n> = (state, action) => {\n  state.others = action.payload\n}\n\nexport const addPresenceReducer: CaseReducer<\n  LiveFamilyState,\n  PayloadAction<AddPresencePayload>\n> = (state, action) => {\n  if (action.payload.index != undefined) {\n    state.others.splice(action.payload.index, 0, action.payload.presence)\n  } else {\n    state.others.push(action.payload.presence)\n  }\n}\n\nexport const removePresenceReducer: CaseReducer<\n  LiveFamilyState,\n  PayloadAction<string>\n> = (state, action) => {\n  let index = state.others.findIndex((element, index) => {\n    return element.userId == action.payload\n  })\n  if (index != -1) {\n    state.others.splice(index, 1)\n  }\n}\n\nexport const updatePresenceReducer: CaseReducer<\n  LiveFamilyState,\n  PayloadAction<Presence>\n> = (state, action) => {\n  let index = state.others.findIndex((element, index) => {\n    return element.userId == action.payload.userId\n  })\n  if (index != -1) {\n    state.others[index] = action.payload\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { LiveFamilyInitialState } from \"@/redux/liveFamily/liveFamilyState\"\nimport {\n  addPresenceReducer,\n  removePresenceReducer,\n  updateLiveFamilyListReducer,\n  updatePresenceReducer,\n} from \"@/redux/liveFamily/liveFamilyReducer\"\n\nconst liveFamilySlice = createSlice({\n  name: \"liveFamily\",\n  initialState: LiveFamilyInitialState,\n  reducers: {\n    updateLiveFamilyListReducer,\n    addPresenceReducer,\n    removePresenceReducer,\n    updatePresenceReducer,\n  },\n})\n\nexport const liveFamilyActions = liveFamilySlice.actions\nexport default liveFamilySlice.reducer\n","import { CaseReducer, PayloadAction } from \"@reduxjs/toolkit\"\nimport { AppInfo } from \"./appInfoState\"\n\nexport const updateAppInfoReducer: CaseReducer<\n  AppInfo | null,\n  PayloadAction<AppInfo | null>\n> = (state, action) => {\n  return action.payload\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { SliceCaseReducers } from \"@reduxjs/toolkit/src/createSlice\"\nimport { AppInfo } from \"@/redux/currentApp/appInfo/appInfoState\"\nimport { updateAppInfoReducer } from \"@/redux/currentApp/appInfo/appInfoReducer\"\n\nconst appInfoSlice = createSlice<\n  AppInfo | null,\n  SliceCaseReducers<AppInfo | null>,\n  \"appInfo\"\n>({\n  name: \"appInfo\",\n  initialState: null,\n  reducers: { updateAppInfoReducer },\n})\n\nexport const appInfoActions = appInfoSlice.actions\nexport default appInfoSlice.reducer\n","import { Room } from \"@/api/ws/ws\"\n\nexport interface ConnectionError {\n  errorState: boolean\n  room?: Room\n}\n\nexport interface BuilderInfo {\n  version: string\n  language: string\n}\n\nexport const BuilderInfoInitialState: BuilderInfo = {\n  version: \"0.0.0\",\n  language: \"English\",\n}\n","import { CaseReducer, PayloadAction } from \"@reduxjs/toolkit\"\nimport {\n  BuilderInfo,\n  ConnectionError,\n} from \"@/redux/builderInfo/builderInfoState\"\n\nexport const updateLanguageReducer: CaseReducer<\n  BuilderInfo,\n  PayloadAction<string>\n> = (state, action) => {\n  state = {\n    ...state,\n    language: action.payload,\n  }\n  return state\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { BuilderInfoInitialState } from \"@/redux/builderInfo/builderInfoState\"\nimport { updateLanguageReducer } from \"@/redux/builderInfo/builderInfoReducer\"\n\nconst builderInfoSlice = createSlice({\n  name: \"builderInfo\",\n  initialState: BuilderInfoInitialState,\n  reducers: {\n    updateLanguageReducer,\n  },\n})\n\nexport const builderInfoActions = builderInfoSlice.actions\nexport default builderInfoSlice.reducer\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\"\nimport logger from \"redux-logger\"\nimport resourceReducer from \"@/redux/currentApp/action/resource/resourceSlice\"\nimport actionListReducer from \"@/redux/currentApp/action/actionList/actionListSlice\"\nimport inspectReducer from \"@/redux/currentApp/editor/inspect/inspectSlice\"\nimport dashboardResourceReducer from \"@/redux/dashboard/resources/dashboardResourceSlice\"\nimport dashboardAppReducer from \"@/redux/dashboard/apps/dashboardAppSlice\"\nimport currentUserReducer from \"@/redux/currentUser/currentUserSlice\"\nimport liveFamilyReducer from \"@/redux/liveFamily/liveFamilySlice\"\nimport appInfoReducer from \"@/redux/currentApp/appInfo/appInfoSlice\"\nimport builderInfoReducer from \"@/redux/builderInfo/builderInfoSlice\"\n\nconst editorReducer = combineReducers({\n  inspect: inspectReducer,\n})\n\nconst actionReducer = combineReducers({\n  actionList: actionListReducer,\n  resource: resourceReducer,\n})\n\nconst appReducer = combineReducers({\n  editor: editorReducer,\n  action: actionReducer,\n  appInfo: appInfoReducer,\n})\n\nconst dashboardReducer = combineReducers({\n  dashboardResources: dashboardResourceReducer,\n  dashboardApps: dashboardAppReducer,\n})\n\nconst store = configureStore({\n  reducer: {\n    currentApp: appReducer,\n    dashboard: dashboardReducer,\n    currentUser: currentUserReducer,\n    liveFamily: liveFamilyReducer,\n    builderInfo: builderInfoReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n})\n\nexport default store\nexport type RootState = ReturnType<typeof store.getState>\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nasync function startMockWorker() {\n  const { worker } = await import(\"./mocks/browser\")\n  await worker.start()\n}\n\nasync function prepare() {\n  if (import.meta.env.DEV) {\n    await startMockWorker()\n  }\n}\n\nprepare().then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n  )\n})\n"],"file":"assets/index.a0d647bc.js"}