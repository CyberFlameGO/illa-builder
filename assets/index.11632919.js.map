{"version":3,"mappings":"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","names":["globalStyle","codemirrorGlobalStyle","css","globalColor","illaPrefix","Page404","this","Page403","Page500","getCurrentUser","state","currentUser","language","useSelector","getBuilderInfo","changeLanguage","then","enUS","getLocaleFromLanguage","_jsxDEV","enableMapSet","worker","start","startMockWorker","prepare","render","document","getElementById"],"sources":["../../vite/modulepreload-polyfill","../../vite/preload-helper","../../src/style.tsx","../../src/page/status/404/index.tsx","../../src/page/status/403/index.tsx","../../src/page/status/500/index.tsx","../../src/redux/currentUser/currentUserSelector.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const scriptRel = 'modulepreload';const seen = {};const base = '/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const globalStyle = css`\n  body {\n    margin: 0;\n    padding: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  * {\n    outline: none !important;\n  }\n\n  /*\n  *  Use a more-intuitive box-sizing model.\n  */\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n`\n\nexport const codemirrorGlobalStyle = css`\n  .CodeMirror-hints {\n    padding: 0;\n    border: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n    border-radius: 8px;\n    box-shadow: 0 2px 16px 0 ${globalColor(`--${illaPrefix}-blackAlpha-05`)};\n  }\n  li.CodeMirror-hint-active {\n    background: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n  }\n`\n","import { FC } from \"react\"\n\nexport const Page404: FC = () => {\n  return <div>404</div>\n}\n","import { FC } from \"react\"\n\nexport const Page403: FC = () => {\n  return <div>403</div>\n}\n","import { FC } from \"react\"\n\nexport const Page500: FC = () => {\n  return <div>500</div>\n}\n","import { RootState } from \"@/store\"\n\nexport const getCurrentUser = (state: RootState) => {\n  return state.currentUser\n}\n","import { Global, css } from \"@emotion/react\"\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\"\nimport { globalStyle, codemirrorGlobalStyle } from \"./style\"\nimport { DashboardApps } from \"@/page/Dashboard/DashboardApps\"\nimport { DashboardResources } from \"@/page/Dashboard/DashboardResources\"\nimport { IllaApp } from \"@/page/Dashboard\"\nimport { Editor } from \"@/page/App\"\nimport { Setting } from \"@/page/Setting\"\nimport { Page404 } from \"@/page/status/404\"\nimport { Page403 } from \"@/page/status/403\"\nimport { Page500 } from \"@/page/status/500\"\nimport { SettingAccount } from \"@/page/Setting/SettingAccount\"\nimport { SettingPassword } from \"@/page/Setting/SettingPassword\"\nimport { SettingOthers } from \"@/page/Setting/SettingOthers\"\nimport {\n  ConfigProvider,\n  enUS,\n  Locale,\n  zhCN,\n} from \"@illa-design/config-provider\"\nimport { useSelector } from \"react-redux\"\nimport { getCurrentUser } from \"@/redux/currentUser/currentUserSelector\"\nimport \"@/i18n/config\"\nimport \"@/api/base\"\nimport i18n from \"@/i18n/config\"\nimport { getBuilderInfo } from \"@/redux/builderInfo/builderInfoSelector\"\n\n// user language > builder language\nfunction getLocaleFromLanguage(language?: string): Locale {\n  let selectedLocale: Locale\n  switch (language ?? useSelector(getBuilderInfo).language) {\n    case \"English\":\n      selectedLocale = enUS\n      i18n.changeLanguage(\"en-US\").then()\n      break\n    case \"简体中文\":\n      selectedLocale = zhCN\n      i18n.changeLanguage(\"zh-CN\").then()\n      break\n    default:\n      selectedLocale = enUS\n  }\n  return enUS\n}\n\nfunction App() {\n  const currentUser = useSelector(getCurrentUser)\n  return (\n    <BrowserRouter>\n      <ConfigProvider locale={getLocaleFromLanguage(currentUser?.language)}>\n        <Global styles={css(globalStyle, codemirrorGlobalStyle)} />\n        <Routes>\n          <Route path=\"dashboard\" element={<IllaApp />}>\n            <Route index element={<Navigate to=\"./apps\" />} />\n            <Route path=\"apps\" element={<DashboardApps />} />\n            <Route path=\"resources\" element={<DashboardResources />} />\n          </Route>\n          <Route index element={<Navigate to=\"/dashboard\" />} />\n          <Route path=\"app/:app\" element={<Editor />} />\n          <Route path=\"setting\" element={<Setting />}>\n            <Route index element={<Navigate to=\"./account\" />} />\n            <Route path=\"account\" element={<SettingAccount />} />\n            <Route path=\"password\" element={<SettingPassword />} />\n            <Route path=\"others\" element={<SettingOthers />} />\n          </Route>\n          <Route path=\"403\" element={<Page403 />} />\n          <Route path=\"500\" element={<Page500 />} />\n          <Route path=\"*\" element={<Page404 />} />\n        </Routes>\n      </ConfigProvider>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nimport { enableMapSet } from \"immer\"\n\nenableMapSet()\n\nasync function startMockWorker() {\n  const { worker } = await import(\"./mocks/browser\")\n  await worker.start()\n}\n\nasync function prepare() {\n  if (import.meta.env.DEV) {\n    await startMockWorker()\n  }\n}\n\nprepare().then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n  )\n})\n"],"file":"assets/index.11632919.js"}